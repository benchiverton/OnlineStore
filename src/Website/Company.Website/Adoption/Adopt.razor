@page "/adopt/{AdoptableRockId}"

@inject AdoptionService AdoptionService;
@inject NavigationManager _navManager;

<AuthorizeView>
    <Authorized>
        @if (_ready)
        {
            <div class="container-fluid">
                <br/>
                <div class="row">
                    <div class="col-md-6">
                        <div class="img-fluid petrock-image-container">
                            <img class="img-top petrock-image-img" src="@_adoptableRock.Images.FirstOrDefault()" alt="image">
                        </div>
                    </div>
                    <div class="customise-inputs col-md">
                        <h2>Customise your Rock Pal</h2>
                        <hr/>
                        <h6>Customize @_adoptableRock.Name into your perfect pal and make them uniquely yours!</h6>
                        <VariantSelector AdoptableRock="@_adoptableRock" Variants="@_variants" SelectedVariant="@_selectedAdoptableRockVariant" NewVariantSelected="@OnNewPetRockVariantSelected"></VariantSelector>
                        <h5 class="attribute-heading">Name your pal:</h5>
                        <InputText class="form-control" @bind-Value="_selectedAdoptableRockName"></InputText>
                    </div>
                    <div class="col-md">
                        <button class="btn btn-adopt-now btn-block"
                                disabled="@(_selectedAdoptableRockVariant == null || string.IsNullOrEmpty(_selectedAdoptableRockName))"
                                @onclick="AdoptNow">
                            <i class="fas fa-arrow-right mr-3"/>Adopt me!
                        </button>
                    </div>
                </div>
            </div>
        }
    </Authorized>
    <NotAuthorized>
        <RedirectToLogin/>
    </NotAuthorized>
</AuthorizeView>

@code {
    [Parameter] public string AdoptableRockId { get; set; }

    private AdoptableRock _adoptableRock;
    private List<AdoptableRockVariant> _variants;
    private AdoptableRockVariant _selectedAdoptableRockVariant;
    private string _selectedAdoptableRockName;
    private bool _ready = false;

    protected override async Task OnParametersSetAsync()
    {
        _adoptableRock = await AdoptionService.GetAdoptableRockById(AdoptableRockId);
        _variants = await AdoptionService.GetAdoptableRockVariants(AdoptableRockId);
        _ready = true;
        await base.OnParametersSetAsync();
    }

    private void OnNewPetRockVariantSelected(AdoptableRockVariant selectedAdoptableRockVariant)
    {
        _selectedAdoptableRockVariant = selectedAdoptableRockVariant;
        StateHasChanged();
    }

    private void AdoptNow()
    {
        _navManager.NavigateTo($"adopt/{AdoptableRockId}/{_selectedAdoptableRockVariant.VariantId}?name={_selectedAdoptableRockName}");
    }

}
