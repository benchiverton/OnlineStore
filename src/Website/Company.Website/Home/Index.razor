@page "/"

@inject AdoptionService _adoptionService

<Company.Website.Home.ChatModal @ref="Modal"></Company.Website.Home.ChatModal>

<div class="content px-4">
    <h1><b>Adopt</b> a RockPal</h1>
    <h6>Pick your perfect pebble! Choose from a range of RockPal's to adopt and make your own.</h6>
    <div class="adoptable-rocks">
        @if (_adoptableRocks != null)
        {
            @foreach (var petRock in _adoptableRocks)
            {
                <div class="img-fluid rockpal-card">
                    <div class="rockpal-container">
                        <h1>@petRock.Name</h1>
                        <img class="rockpal-img" src="@petRock.Images.First()" alt="Card image">
                        <h6>@petRock.Catchphrase</h6>
                        <a href="@($"adoption/{petRock.Id}")" class="btn adopt-button">More information</a>
                    </div>
                </div>
            }
        }
    </div>

    <h1 class="look-after-header"><b>Look After</b> your RockPal's</h1>
    <h6>Keep your RockPal's happy and healthy with fun activities!</h6>
    <AuthorizeView>
        <Authorized>
            @if (_petRocks != null)
            {
                <div class="adopted-rocks">
                    @foreach (var petRock in _petRocks)
                    {
                        <div class="rockpal-card">
                            <div class="rockpal-container">
                                <h1>@petRock.Name</h1>
                                <img class="rockpal-img" src="@petRock.Images.First()" alt="Card image">
                                <h6>@(string.Join(", ", petRock.Attributes.Select(pr => pr.Value)))</h6>
                                <button class="btn btn-chat btn-block"
                                        @onclick="async () => await Modal.Open(petRock.Id, petRock.Name)">
                                    <i class="fas fa-comment mr-3"/><b>Chat</b>
                                </button>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <h6><i>Once you've adopted a RockPal, you'll see them here.</i></h6>
            }
        </Authorized>
        <NotAuthorized>
            <h6><i>Log in to look after your RockPal's.</i></h6>
        </NotAuthorized>
    </AuthorizeView>
</div>

@code {
    [CascadingParameter] private Task<AuthenticationState> authStateTask { get; set; }

    private ChatModal Modal { get; set; }

    private List<PetRock> _petRocks;
    private List<AdoptableRock> _adoptableRocks;

    protected override async Task OnInitializedAsync()
    {
        var authState = await authStateTask;
        if (authState.User.Identity?.IsAuthenticated ?? false)
        {
            _petRocks = await _adoptionService.GetPetRocks();
        }

        _adoptableRocks = await _adoptionService.GetAdoptableRocks();
    }

}
