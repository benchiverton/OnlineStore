name: ".NET Build, Terraform Deploy and App Deploy"
on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-api:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.100
      - name: Install dependencies
        run: dotnet restore src/Api/Company.Api.sln
      - name: Build
        run: dotnet build src/Api/Company.Api.sln --configuration Release --no-restore
      - name: Test
        run: dotnet test src/Api/Company.Api.sln --no-restore --verbosity normal
      - name: Publish
        run: dotnet publish src/Api/Company.Api/Company.Api.csproj -c Release -o publish --runtime linux-x64
      - name: Publish artifact
        uses: actions/upload-artifact@v2
        with:
          name: api
          path: src/Api/Company.Api/publish

  build-website:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.100
      - name: Install dependencies
        run: dotnet restore src/Website/Company.Website.sln
      - name: Build
        run: dotnet build src/Website/Company.Website.sln --configuration Release --no-restore
      - name: Test
        run: dotnet test src/Website/Company.Website.sln --no-restore --verbosity normal
      - name: Publish
        run: dotnet publish src/Website/Company.Website/Company.Website.csproj -c Release -o publish --runtime linux-x64
      - name: Publish artifact
        uses: actions/upload-artifact@v2
        with:
          name: website
          path: src/Website/Company.Website/publish

  deploy-terraform-test:
    environment: test
    env:
      ARM_CLIENT_ID: ${{ secrets.TF_VAR_AGENT_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.TF_VAR_AGENT_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.TF_VAR_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.TF_VAR_TENANT_ID }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./terraform"
    steps:
      - name: "Checkout"
        uses: actions/checkout@master

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      - name: "Terraform Format"
        id: fmt
        run: terraform fmt

      - name: "Terraform Init"
        id: init
        run: terraform init -backend-config="container_name=onlinestoretfstatestoragetest"

      - name: "Terraform Validate"
        id: validate
        run: terraform validate -no-color

      - name: "Terraform Plan"
        id: plan
        run: terraform plan -no-color
        env:
          TF_VAR_location: "East US"
          TF_VAR_environment: test

      - name: "Terraform Apply"
        id: apply
        run: terraform apply -auto-approve
        env:
          TF_VAR_location: "East US"
          TF_VAR_environment: test

      - name: Set Application Name
        shell: bash
        run: |
          terraform output -raw app_service_name > application-name-test.txt

      - name: Upload application name for deploy job
        uses: actions/upload-artifact@v2
        with:
          name: application-name-test
          path: terraform/application-name-test.txt

  deploy-app-test:
    needs: [build-api, build-website, deploy-terraform-test]
    environment: test
    runs-on: ubuntu-latest
    steps:
      # Checkout the repo
      - uses: actions/checkout@master

      - name: Download application name
        uses: actions/download-artifact@v2
        with:
          name: application-name-test

      - name: Load application name
        id: vars
        shell: bash
        run: |
          echo ::set-output name=azure_webapp_name::$(cat application-name-test.txt)

      - name: Download site package
        uses: actions/download-artifact@v2
        with:
          name: site
          path: ${{ github.workspace }}/site

      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Deploy to Azure Web apps
      - name: "Run Azure webapp deploy"
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ steps.vars.outputs.azure_webapp_name }}
          package: ${{ github.workspace }}/site

  deploy-terraform-prod:
    needs: [deploy-app-test]
    environment: prod
    env:
      ARM_CLIENT_ID: ${{ secrets.TF_VAR_AGENT_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.TF_VAR_AGENT_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.TF_VAR_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.TF_VAR_TENANT_ID }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./terraform"
    steps:
      - name: "Checkout"
        uses: actions/checkout@master

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      - name: "Terraform Format"
        id: fmt
        run: terraform fmt

      - name: "Terraform Init"
        id: init
        run: terraform init -backend-config="container_name=onlinestoretfstatestorageprod"

      - name: "Terraform Validate"
        id: validate
        run: terraform validate -no-color

      - name: "Terraform Plan"
        id: plan
        run: terraform plan -no-color
        env:
          TF_VAR_location: "North Europe"
          TF_VAR_environment: prod

      - name: "Terraform Apply"
        id: apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve
        env:
          TF_VAR_location: "North Europe"
          TF_VAR_environment: prod

      - name: Set Application Name
        shell: bash
        run: |
          terraform output -raw app_service_name > application-name-prod.txt

      - name: Upload application name for deploy job
        uses: actions/upload-artifact@v2
        with:
          name: application-name-prod
          path: terraform/application-name-prod.txt

  app-deploy-prod:
    needs: [deploy-terraform-prod]
    environment: prod
    runs-on: ubuntu-latest
    steps:
      # Checkout the repo
      - uses: actions/checkout@master

      - name: Download application name
        uses: actions/download-artifact@v2
        with:
          name: application-name-prod

      - name: Load application name
        id: vars
        shell: bash
        run: |
          echo ::set-output name=azure_webapp_name::$(cat application-name-prod.txt)

      - name: Download site package
        uses: actions/download-artifact@v2
        with:
          name: site
          path: ${{ github.workspace }}/site

      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Deploy to Azure Web apps
      - name: "Run Azure webapp deploy"
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ steps.vars.outputs.azure_webapp_name }}
          package: ${{ github.workspace }}/site
