@inject PricingService PricingService
@inject CurrencyService CurrencyService

<h5>@GetFormattedAmount(DealPrice)</h5>

@code {
    [Parameter]
    public string ProductId { get; set; }
    [Parameter]
    public int ProductVariantId { get; set; }
    [Parameter]
    public string CurrencyCode { get; set; }

    private string CurrencySymbol { get; set; }
    private Pricing Pricing { get; set; }
    public decimal DealPrice { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        CurrencySymbol = CurrencyService.GetCurrencyCharacter(CurrencyCode);

        Pricing = await PricingService.GetPricingByProductTypeId(ProductId, ProductVariantId);
        DealPrice = await CurrencyService.ConvertCurrency(CurrencyCode, Pricing.DealPriceGBP);
    }

    private string GetFormattedAmount(decimal amount) => $"{CurrencySymbol}{amount:0.00} {CurrencyCode}";
}
