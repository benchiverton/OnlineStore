@page "/cart"
@using Company.Website.ProductVariants

@inject CartService CartService
@inject ProductVariantsService ProductVariantsService
@inject ProductInformationService ProductInformationService

<div style="padding: 20px;">
    <h2>Shopping Cart</h2>

    <div style="overflow: auto;">
        <DataGrid TItem="CartProduct"
                  Data="@_cartProducts"
                  ReadData="@OnReadData"
                  TotalItems="@_totalCartProducts"
                  Editable="true"
                  EditMode="DataGridEditMode.Inline"
                  RowUpdated="@UpdateItemInCart"
                  RowRemoving="@RemoveItemFromCart"
                  RowSelectable="(a) => false"
                  RowHoverCursor="(a) => Cursor.Default">
            <ChildContent>
                @* field is meaningless here, however, data grid library enforces that it's set *@
                <DataGridColumn TItem="CartProduct" Field="@nameof(CartProduct.ProductId)" Caption="Product">
                    <DisplayTemplate>
                        <ProductInformationLabel ProductId="@((context as CartProduct).ProductId)" />
                        <ProductVariantLabel ProductId="@((context as CartProduct).ProductId)" ProductVariantId="@((context as CartProduct).ProductVariantId)"></ProductVariantLabel>
                    </DisplayTemplate>
                </DataGridColumn>
                @* field is meaningless here, however, data grid library enforces that it's set *@
                <DataGridColumn TItem="CartProduct" Field="@nameof(CartProduct.ProductVariantId)" Caption="Price/Unit">
                    <DisplayTemplate>
                        <PricingLabel CurrencyCode="GBP" ProductId="@((context as CartProduct).ProductId)" ProductVariantId="@((context as CartProduct).ProductVariantId)" />
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="CartProduct" Field="@nameof(CartProduct.Quantity)" Caption="Quantity" Editable="true">
                    <EditTemplate>
                        <Validation UsePattern="true">
                            <NumericEdit TValue="int" Pattern="^[1-9][0-9]*$" Value="@((int) context.CellValue)" ValueChanged="@(v => context.CellValue = (object) v)" MinValue="">
                                <Feedback>
                                    <ValidationError>Quantity must be greater than 0.</ValidationError>
                                </Feedback>
                            </NumericEdit>
                        </Validation>
                    </EditTemplate>
                </DataGridColumn>
                <DataGridCommandColumn TItem="CartProduct" NewCommandAllowed="false">
                    <EditCommandTemplate>
                        <button class="btn btn-primary" @onclick="context.Clicked">
                            <Icon Name="IconName.Edit" Margin="Margin.Is3.FromRight" />Edit
                        </button>
                    </EditCommandTemplate>
                    <DeleteCommandTemplate>
                        <button class="btn btn-danger" @onclick="context.Clicked">
                            <Icon Name="IconName.Delete" Margin="Margin.Is3.FromRight" />Delete
                        </button>
                    </DeleteCommandTemplate>
                    <SaveCommandTemplate>
                        <button class="btn btn-success" @onclick="context.Clicked">
                            <Icon Name="IconName.Check" Margin="Margin.Is3.FromRight" />Save
                        </button>
                    </SaveCommandTemplate>
                    <CancelCommandTemplate>
                        <button class="btn btn-primary" @onclick="context.Clicked">
                            <Icon Name="IconName.Times" Margin="Margin.Is3.FromRight" />Cancel
                        </button>
                    </CancelCommandTemplate>
                </DataGridCommandColumn>
            </ChildContent>
            <EmptyTemplate>
                <h4>Your Shopping Cart is empty</h4>
            </EmptyTemplate>
        </DataGrid>
    </div>

    <PricingTotal CurrencyCode="GBP" ProductVariantIdAndQuantities="@_cartProducts?.Select(cp => (cp.ProductId, cp.ProductVariantId, cp.Quantity))?.ToList()"></PricingTotal>

</div>

@code {
    private List<CartProduct> _cartProducts;
    private int _totalCartProducts;

    private async Task OnReadData()
    {
        _cartProducts = CartService.GetCartFromStorage().CartProducts;
    }

    private void UpdateItemInCart(SavedRowItem<CartProduct, Dictionary<string, object>> e)
    {
        CartService.UpdateQuantity(e.Item.ProductId, e.Item.ProductVariantId, e.Item.Quantity);
        StateHasChanged();
    }

    private void RemoveItemFromCart(CancellableRowChange<CartProduct> e)
    {
        CartService.Delete(e.Item.ProductId, e.Item.ProductVariantId);
        StateHasChanged();
    }
}
