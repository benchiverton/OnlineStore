@inject ProductVariantsService ProductVariantsService
@* Dropdown for index 1 *@
@if (!string.IsNullOrEmpty(_productVariants.Index1))
{
    <h5>@_productVariants.Index1</h5>
    <select class="form-control" @bind="SelectedIndex1">
        @foreach (var index1Value in _productVariants.Index1Values)
        {
            <option value="@index1Value">@index1Value</option>
        }
    </select>
}

@* Dropdown for index 2 *@
@if (!string.IsNullOrEmpty(_productVariants.Index2))
{
    <h5>@_productVariants.Index2</h5>
    <select class="form-control" @bind="SelectedIndex2">
        @foreach (var index2Value in _productVariants.Index2Values)
        {
            <option value="@index2Value">@index2Value</option>
        }
    </select>
}

@* Dropdown for index 3 *@
@if (!string.IsNullOrEmpty(_productVariants.Index3))
{
    <h4>@_productVariants.Index3</h4>
    <select class="form-control" @bind="SelectedIndex3">
        @foreach (var index3Value in _productVariants.Index3Values)
        {
            <option value="@index3Value">@index3Value</option>
        }
    </select>
}

@code {

    [Parameter]
    public string ProductId { get; set; }

    [Parameter]
    public Action<int> ProductVariantChanged { get; set; }

    private ProductVariants _productVariants;

    // the id of the selected product variant
    private ProductVariant _selectedProductVariant;

    private ProductVariant SelectedProductVariant
    {
        get => _selectedProductVariant; set
        {
            if (value == null || (SelectedProductVariant != null && value.Id == SelectedProductVariant.Id))
            {
                return;
            }

            ProductVariantChanged.Invoke(value.Id);
            _selectedProductVariant = value;
        }
    }

    // the selected values of the drop down lists
    private string _selectedIndex1;
    private string SelectedIndex1
    {
        get => _selectedIndex1; set
        {
            _selectedIndex1 = value;
            SelectedProductVariant = ProductVariantsService.GetProductVariant(ProductId, SelectedIndex1, SelectedIndex2, SelectedIndex3).Result;
        }
    }
    private string _selectedIndex2;
    private string SelectedIndex2
    {
        get => _selectedIndex2; set
        {
            _selectedIndex2 = value;
            SelectedProductVariant = ProductVariantsService.GetProductVariant(ProductId, SelectedIndex1, SelectedIndex2, SelectedIndex3).Result;
        }
    }
    private string _selectedIndex3;

    private string SelectedIndex3
    {
        get => _selectedIndex3; set
        {
            _selectedIndex3 = value;
            SelectedProductVariant = ProductVariantsService.GetProductVariant(ProductId, SelectedIndex1, SelectedIndex2, SelectedIndex3).Result;
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        if (ProductId == _selectedProductVariant?.ProductId)
        {
            // the event emitted is calling this method incorrectly - do nothing if product id hasn't changed
            return;
        }

        _productVariants = await ProductVariantsService.GetProductVariants(ProductId);

        SelectedIndex1 = _productVariants.Index1Values?.FirstOrDefault();
        SelectedIndex2 = _productVariants.Index2Values?.FirstOrDefault();
        SelectedIndex3 = _productVariants.Index3Values?.FirstOrDefault();

        SelectedProductVariant = await ProductVariantsService.GetProductVariant(ProductId, SelectedIndex1, SelectedIndex2, SelectedIndex3);
    }
}
